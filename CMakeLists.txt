CMAKE_MINIMUM_REQUIRED(VERSION 3.16 FATAL_ERROR)

# ---[ Project
PROJECT(FP16 C)

# ---[ Options.
OPTION(FP16_BUILD_TESTS "Build FP16 unit tests" ON)
OPTION(FP16_BUILD_BENCHMARKS "Build FP16 micro-benchmarks" ON)
OPTION(FP16_BUILD_COMPARATIVE_BENCHMARKS "Build FP16 micro-benchmarks comparing to alternatives" OFF)
OPTION(FP16_INSTALL_LIBRARY "Install the FP16 library headers" ON)

# ---[ CMake options
IF(FP16_BUILD_TESTS OR FP16_BUILD_BENCHMARKS)
  ENABLE_LANGUAGE(CXX)
ENDIF()

IF(FP16_BUILD_TESTS)
  ENABLE_TESTING()
ENDIF()

# ---[ FP16 library
ADD_LIBRARY(fp16 INTERFACE)
TARGET_INCLUDE_DIRECTORIES(fp16 INTERFACE
    "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>"
    "$<INSTALL_INTERFACE:include>")

IF(FP16_INSTALL_LIBRARY)
  INCLUDE(GNUInstallDirs)
  INSTALL(FILES include/fp16.h
    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
  INSTALL(FILES
      include/fp16/bitcasts.h
      include/fp16/fp16.h
    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/fp16")
ENDIF()

IF(FP16_BUILD_TESTS)
  # ---[ Build simple FP16 tests
  ADD_EXECUTABLE(bitcasts-test test/bitcasts.cc)
  SET_TARGET_PROPERTIES(bitcasts-test PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_INCLUDE_DIRECTORIES(bitcasts-test PRIVATE test)
  TARGET_LINK_LIBRARIES(bitcasts-test PRIVATE fp16)
  ADD_TEST(NAME bitcasts COMMAND bitcasts-test)
ENDIF()

IF(FP16_BUILD_BENCHMARKS)
#   # ---[ Build simple FP16 benchmarks
  ADD_EXECUTABLE(alt-element-bench bench/alt_element.cc)
  SET_TARGET_PROPERTIES(alt-element-bench PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_INCLUDE_DIRECTORIES(alt-element-bench PRIVATE "${PROJECT_SOURCE_DIR}")
  TARGET_LINK_LIBRARIES(alt-element-bench PRIVATE fp16)

  ADD_EXECUTABLE(ieee-element-bench bench/ieee_element.cc)
  SET_TARGET_PROPERTIES(ieee-element-bench PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_COMPILE_DEFINITIONS(ieee-element-bench PRIVATE "FP16_COMPARATIVE_BENCHMARKS=$<BOOL:FP16_BUILD_COMPARATIVE_BENCHMARKS>")
  TARGET_INCLUDE_DIRECTORIES(ieee-element-bench PRIVATE "${PROJECT_SOURCE_DIR}")
  TARGET_LINK_LIBRARIES(ieee-element-bench PRIVATE fp16)


  ADD_EXECUTABLE(ieee-32-to-16-array-bench bench/ieee_32_to_16_array.cc)
  SET_TARGET_PROPERTIES(ieee-32-to-16-array-bench PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_COMPILE_DEFINITIONS(ieee-32-to-16-array-bench PRIVATE "FP16_COMPARATIVE_BENCHMARKS=$<BOOL:FP16_BUILD_COMPARATIVE_BENCHMARKS>")
  TARGET_INCLUDE_DIRECTORIES(ieee-32-to-16-array-bench PRIVATE "${PROJECT_SOURCE_DIR}")
  TARGET_LINK_LIBRARIES(ieee-32-to-16-array-bench PRIVATE fp16)

  
  ADD_EXECUTABLE(ieee-16-to-32-array-bench bench/ieee_16_to_32_array.cc)
  SET_TARGET_PROPERTIES(ieee-16-to-32-array-bench PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_COMPILE_DEFINITIONS(ieee-16-to-32-array-bench PRIVATE "FP16_COMPARATIVE_BENCHMARKS=$<BOOL:FP16_BUILD_COMPARATIVE_BENCHMARKS>")
  TARGET_INCLUDE_DIRECTORIES(ieee-16-to-32-array-bench PRIVATE "${PROJECT_SOURCE_DIR}")
  TARGET_LINK_LIBRARIES(ieee-16-to-32-array-bench PRIVATE fp16)


  ADD_EXECUTABLE(alt-16-to-32-array-bench bench/alt_16_to_32_array.cc)
  SET_TARGET_PROPERTIES(alt-16-to-32-array-bench PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_INCLUDE_DIRECTORIES(alt-16-to-32-array-bench PRIVATE "${PROJECT_SOURCE_DIR}")
  TARGET_LINK_LIBRARIES(alt-16-to-32-array-bench PRIVATE fp16)


  ADD_EXECUTABLE(alt-32-to-16-array-bench bench/alt_32_to_16_array.cc)
  SET_TARGET_PROPERTIES(alt-32-to-16-array-bench PROPERTIES
    CXX_STANDARD 11
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS YES)
  TARGET_INCLUDE_DIRECTORIES(alt-32-to-16-array-bench PRIVATE "${PROJECT_SOURCE_DIR}")
  TARGET_LINK_LIBRARIES(alt-32-to-16-array-bench PRIVATE fp16)
ENDIF()
